<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<bean id="corePropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location" value="classpath:view.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean> 

	<!-- Imports user-defined @Controller beans that process client requests -->
	<import resource="controllers.xml" /> 
	
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" /> 
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!-- Enables controllers mapped with @RequestMapping annotations, formatting 
		annotations @NumberFormat @DateTimeFormat, and JSR 303 style validation -->
	<mvc:annotation-driven />



	<!-- Enable serving of classpath with Spring 3 resource serving mechanism. 
		For example: GET /webflow-showcase/resources/styles/blueprint/print.css -->
	<mvc:resources mapping="/resources/**"
		location="/, classpath:/META-INF/web-resources/" />

	<mvc:default-servlet-handler />

	<!-- Resolves logical view names returned by Controllers to Tiles; a view 
		name to resolve is treated as the name of a tiles definition -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	
	<!-- Configures the Tiles layout system -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/**/views.xml</value> 
			</list>
		</property>
		<!-- resolving preparer names as Spring bean definition names -->
		<property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</bean>
	
</beans>